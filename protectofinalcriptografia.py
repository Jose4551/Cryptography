# -*- coding: utf-8 -*-
"""PROTECTOFINALCRIPTOGRAFIA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VVLig8XO30LFG9Lkwak1YwekMmvEBD8J
"""

import hashlib
import datetime

class Block:
    def __init__(self, index, timestamp, data, previous_hash):
        self.index = index
        self.timestamp = timestamp
        self.data = data
        self.previous_hash = previous_hash
        self.hash = self.calculate_hash()

    def calculate_hash(self):
        sha = hashlib.sha256()
        sha.update(str(self.index).encode('utf-8') +
                   str(self.timestamp).encode('utf-8') +
                   str(self.data).encode('utf-8') +
                   str(self.previous_hash).encode('utf-8'))
        return sha.hexdigest()

class Blockchain:
    def __init__(self):
        self.chain = [self.create_genesis_block()]
        self.users = set()

    def create_genesis_block(self):
        return Block(0, datetime.datetime.now(), "Genesis Block", "0")

    def get_latest_block(self):
        return self.chain[-1]

    def add_block(self, new_block):
        new_block.previous_hash = self.get_latest_block().hash
        new_block.hash = new_block.calculate_hash()
        self.chain.append(new_block)

def create_vaccination_record(blockchain):
    curp = input("CURP: ")
    if curp in blockchain.users:
        print("El usuario ya existe en la base de datos.")
        return

    name = input("Nombre: ")
    last_name = input("Apellidos: ")
    date_of_birth = input("Fecha de nacimiento (YYYY-MM-DD): ")
    gender = input("Género: ")
    blood_type = input("Tipo de sangre: ")
    diseases = input("Enfermedades : ").split(",")
    vaccine_type = input("Tipo de vacuna a aplicar: ")

    index = len(blockchain.chain)
    timestamp = datetime.datetime.now()
    data = {
        "curp": curp,
        "name": name,
        "last_name": last_name,
        "date_of_birth": date_of_birth,
        "gender": gender,
        "blood_type": blood_type,
        "diseases": diseases,
        "vaccine_type": vaccine_type
    }
    previous_hash = blockchain.get_latest_block().hash
    new_block = Block(index, timestamp, data, previous_hash)
    blockchain.add_block(new_block)
    blockchain.users.add(curp)
    print("Registro de vacunación añadido exitosamente.")

    print("\nVacunas previas:")
    previous_vaccines = [
        {"name": "Tuberculosis", "date_time": "2001-01-10 10:00"},
        {"name": "Hepatitis B", "date_time": "2002-06-20 16:20"},
        {"name": "Varicela", "date_time": "2013-06-20 17:45"},
        {"name": "Influenza", "date_time": "2020-06-20 15:30"}
    ]
    for vaccine in previous_vaccines:
        print(f"Nombre: {vaccine['name']}, Fecha y hora: {vaccine['date_time']}")

#Blockchain
blockchain = Blockchain()

# registro de vacunación
create_vaccination_record(blockchain)